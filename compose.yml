services:
  express:
    image: node:latest
    container_name: express-backend
    working_dir: /app/infrastructure/platforms/express
    volumes:
      - .:/app
    ports:
      - "3000:3000"
    command: sh -c "npm install && npm run dev"
    environment:
      - POSTGRES_LINK=postgres://user:password@postgres:5432/mydatabase
      - MONGODB_CONNECTION_STRING=mongodb://mongodb:27017/mydatabase?authSource=admin
      - NODE_ENV=development
    env_file:
      - .env
    depends_on:
      - postgres
      - mongo

  nestjs:
    image: node:latest
    container_name: nestjs-backend
    working_dir: /app
    volumes:
      - ./infrastructure/platforms/nestJs:/app
    ports:
      - "4000:4000"
    command: "sh -c 'npm install && npm run start:dev'"
    environment:
      - POSTGRES_LINK=postgres://user:password@postgres:5432/mydatabase
      - MONGODB_CONNECTION_STRING=mongodb://mongodb:27017/mydatabase?authSource=admin
    depends_on:
      - postgres
      - mongo

  react:
    image: node:latest
    container_name: react-frontend
    working_dir: /app
    volumes:
      - ./infrastructure/platforms/react:/app
    ports:
      - "5173:5173"
    command: "sh -c 'npm install && npm run dev'"

  postgres:
    image: postgres:latest
    container_name: postgres-db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  adminer:
    image: adminer:latest
    container_name: adminer
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - postgres

  mongo:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "127.0.0.1:27017:27017"
    volumes:
      - mongo_data:/data/db
      - ./SampleCollections:/SampleCollections
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=password
    working_dir: /SampleCollections

volumes:
  postgres_data:
  mongo_data: